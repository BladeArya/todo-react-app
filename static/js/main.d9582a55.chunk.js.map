{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","filteredItems","filter","item","action","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA4BeA,MAtBf,SAAmBC,GACf,IACMC,EADMD,EAAME,MACIC,KAAI,SAAAD,GACtB,OAAO,qBAAKE,UAAU,OAAf,SACH,8BAAG,uBAAOC,KAAK,OAAOC,GAAIJ,EAAMK,IAAKC,MAAON,EAAMO,KAAMC,SAAU,SAACC,GAClEX,EAAMY,UAAUD,EAAEE,OAAOL,MAAMN,EAAMK,QAClC,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAASU,KAAK,QACrCC,QAAS,kBAAIf,EAAMgB,WAAWd,EAAMK,cALlBL,EAAMK,QAY5C,OACA,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SAA+CjB,O,eCjBvDkB,IAAQC,IAAIC,K,IA2EGC,E,kDAvEb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAM,CACTrB,MAAM,GACNsB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKV,WAAW,EAAKA,WAAWU,KAAhB,gBAChB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,wDAcNf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdD,IAAIuB,KAAKC,W,8BAIPpB,GACNA,EAAEqB,iBACF,IAAMC,EAAQL,KAAKL,MAAMC,YAEzB,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQxB,KAAU,CACnB,IAAMP,EAAM,GAAD,mBAAK0B,KAAKL,MAAMrB,OAAhB,CAAsB+B,IACjCL,KAAKC,SAAS,CACZ3B,MAAMA,EACNsB,YAAY,CACVf,KAAK,GACLF,IAAI,S,iCAKDA,GACT,IAAM6B,EAAcR,KAAKL,MAAMrB,MAAMmC,QAAQ,SAAAC,GAAI,OAAEA,EAAK/B,MAAMA,KAC9DqB,KAAKC,SAAS,CACZ3B,MAAMkC,M,gCAGA3B,EAAKF,GACb,IAAML,EAAM0B,KAAKL,MAAMrB,MACvBA,EAAMC,KAAI,SAAAmC,GACLA,EAAK/B,MAAMA,IACZ+B,EAAK7B,KAAKA,MAGdmB,KAAKC,SAAS,CACZ3B,MAAOA,M,+BAIT,OACE,sBAAKE,UAAU,MAAf,UACE,iCACA,uBAAMmC,OAAO,GAAGjC,GAAG,aAAakC,SAAUZ,KAAKD,QAA/C,UACE,uBAAOtB,KAAK,OAAOoC,YAAY,aAAajC,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAUkB,KAAKH,cAC/F,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWH,MAAO0B,KAAKL,MAAMrB,MAC3Bc,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,mB,GAlEN8B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9582a55.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move'\r\n\r\n\r\nfunction ListItems(props){\r\n    const items=props.items;\r\n    const listItems=items.map(items=>{\r\n        return <div className=\"list\" key={items.key}>\r\n            <p><input type=\"text\" id={items.key} value={items.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,items.key)}}/>\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\"icon=\"trash\"\r\n                        onClick={()=>props.deleteItem(items.key)}\r\n                    />\r\n                </span>\r\n            </p>\r\n\r\n        </div>\r\n    })\r\n    return(\r\n    <div>\r\n        <FlipMove duration={500} easing=\"ease-in-out\">{listItems}</FlipMove>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ListItems;","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput=this.handleInput.bind(this);\n    this.addItem=this.addItem.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem=this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!==\"\"){\n      const items=[...this.state.items,newItem];\n      this.setState({\n        items:items,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n  deleteItem(key){\n    const filteredItems=this.state.items.filter (item=>item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n  setUpdate(text,key){\n    const items=this.state.items;\n    items.map(item=>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        <header>\n        <form action=\"\" id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter Text\" value={this.state.currentItem.text} onChange={this.handleInput}/>\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItems items={this.state.items} \n        deleteItem={this.deleteItem}\n        setUpdate={this.setUpdate}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}